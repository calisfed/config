# Enviroment variables for Hyprland

# Nvidia
#env = LIBVA_DRIVER_NAME,nvidia
#env = LIBVA_DRIVER_NAME,vdpau
#env = LIBVA_DRIVER_NAME,radeonsi
# env = GBM_BACKEND,nvidia-drm     # Disable if crash
#env = GBM_BACKEND,nvidia     # Disable if crash
#env = __GLX_VENDOR_LIBRARY_NAME,nvidia # Disable if Discord or Screen sharing Zoom not work
env = WLR_NO_HARDWARE_CURSORS,1 # Cursor on 2nd monitor
# env = WLR_DRM_NO_ATOMIC=1 # use legacy DRM, might fix flickering

# Theme
# env = GTK_THEME,Nord
# env = XCURSOR_THEME,Nordzy-cursors-white
env = XCURSOR_SIZE,45


# Toolkit Backend 
# env = GDK_BACKEND,wayland   # [x11 wayland]
# env = QT_QPA_PLATFORM,wayland,xcb # Run SDL2 applications on Wayland
# env = SDL_VIDEODRIVER,wayland # Run SDL2 applications on Wayland
# env = CLUTTER_BACKEND,wayland # Clutter package already has wayland enabled, this variable will force Clutter applications to try and use the Wayland backend
# env = DISPLAY=$WAYLAND_DISPLAY

# XDG Specifications
# env = XDG_CURRENT_DESKTOP,Hyprland
# env = XDG_SESSION_TYPE,wayland # [x11 wayland]
# env = XDG_SESSION_DESKTOP,Hyprland


# Multiple GPU
# lspci | grep -E 'VGA'
# ls -l /dev/dri/by-path
# In V, Nvidia has busid=01, AMD busid=07
# card1 = amd - renderD128, card0 = nvidia - renderD129
# Line below mean use Nvidia before AMD
#
# env = WLR_DRM_DEVICES,/dev/dri/card0
# env = LIBVA_DRIVER_NAME,nvidia
# env = VDPAU_DRIVER,nvidia

# env = WLR_DRM_DEVICES,/dev/dri/card0:/dev/dri/card1
env = LIBVA_DRIVER_NAME,radeonsi
env = VDPAU_DRIVER,nvidia



# env = WLR_DRM_DEVICES,/dev/dri/card1
# env = GTK_USE_PORTAL,0


# env = GDK_BACKEND,wayland,x11

# env = SDL_VIDEODRIVER,wayland
# env = CLUTTER_BACKEND,wayland
# env = MOZ_ENABLE_WAYLAND,1
# env = MOZ_DISABLE_RDD_SANDBOX,1
# env = _JAVA_AWT_WM_NONREPARENTING,1
# env = QT_AUTO_SCREEN_SCALE_FACTOR,1

# env = QT_QPA_PLATFORM,wayland

# env = LIBVA_DRIVER_NAME,nvidia
# env = GBM_BACKEND,nvidia-drm
# env = __GLX_VENDOR_LIBRARY_NAME,nvidia
# env = WLR_NO_HARDWARE_CURSORS,1
# env = __NV_PRIME_RENDER_OFFLOAD,1
# env = __VK_LAYER_NV_optimus,NVIDIA_only
# env = PROTON_ENABLE_NGX_UPDATER,1
env = NVD_BACKEND,direct
# env = __GL_GSYNC_ALLOWED,1
# env = __GL_VRR_ALLOWED,1
# env = WLR_DRM_NO_ATOMIC,1
# env = WLR_USE_LIBINPUT,1
#env = XWAYLAND_NO_GLAMOR,1 # with this you'll need to use gamescope for gaming
# env = __GL_MaxFramesAllowed,1
# env = WLR_RENDERER_ALLOW_SOFTWARE,1


# env = __EGL_VENDOR_LIBRARY_FILENAMES,/usr/share/glvnd/egl_vendor.d/10_nvidia.json
# env = __EGL_VENDOR_LIBRARY_FILENAMES,/usr/share/glvnd/egl_vendor.d/50_mesa.json
